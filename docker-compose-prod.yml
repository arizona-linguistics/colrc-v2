version: '3.5'
services:
  prisma:
    image: prismagraphql/prisma:1.34
    restart: always
    depends_on:
      - mysql
    expose:
      - "4466"
    env_file:
      - ./misc/.env
    environment:
      PRISMA_CONFIG_PATH: "/prisma.yml"
    volumes:
      - "./misc/prisma.yml:/prisma.yml"
  mysql:
    image: mysql:5.7
    restart: always
    expose:
      - "3306"
    env_file:
      - ./misc/.env
    environment:
      # FIXME: Make DRY/unified with MySQL, Prisma, etc.
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - mysql:/var/lib/mysql
  backend:
    build:
      context: ./backend
      # specify .dev or .prod variant
      dockerfile: Dockerfile.dev
      labels:
        edu.arizona.colrc.description: "API for COLRC v2"
    depends_on:
      - mysql
      - prisma
    restart: always
    expose:
      - "4000"
    env_file:
      - ./misc/.env
    environment:
      DB_HOST: mysql
    volumes:
      - ./backend:/app:rw
      # prevent host's node_modules from being mounted
      - /app/node_modules
  frontend:
    build:
      context: ./frontend
      labels:
        edu.arizona.colrc.description: "Frontend for COLRC v2"
    depends_on:
      - backend
    restart: always
    # FIXME: adjust to work in conjunction with letsencrypt and an nginx proxy
    # ex: https://www.humankode.com/ssl/how-to-set-up-free-ssl-certificates-from-lets-encrypt-using-docker-and-nginx
    # ex: https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src:rw
      - ./frontend/public:/app/public:rw
volumes:
  # FIXME: this should point to a pre-populated DB for deployment;
  # Consider ENV variable for volume path
  mysql:
